# Generated by Django 5.2.6 on 2025-09-11 09:56

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('sensor', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название события')),
                ('identifier', models.CharField(help_text="Уникальный код для программного использования (e.g., 'NEW_DEVICE')", max_length=50, unique=True, verbose_name='Идентификатор')),
            ],
            options={
                'verbose_name': 'Тип события',
                'verbose_name_plural': 'Типы событий',
            },
        ),
        migrations.CreateModel(
            name='LogEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Метка времени')),
                ('details', models.JSONField(blank=True, default=dict, verbose_name='Детали')),
                ('device', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sensor.device', verbose_name='Устройство')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='auditing.event', verbose_name='Событие')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_logs', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Запись в журнале аудита',
                'verbose_name_plural': 'Журнал аудита',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Webhook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('url', models.URLField(max_length=500, verbose_name='URL')),
                ('http_method', models.CharField(choices=[('POST', 'POST'), ('GET', 'GET'), ('PUT', 'PUT'), ('PATCH', 'PATCH'), ('DELETE', 'DELETE')], default='POST', max_length=10, verbose_name='HTTP метод')),
                ('headers', models.JSONField(blank=True, default=dict, help_text='JSON-объект с HTTP-заголовками.', verbose_name='Заголовки')),
                ('body_template', models.TextField(blank=True, help_text='Django-шаблон для тела запроса (для POST/PUT). Доступны переменные из контекста события (e.g., {{ device.ip_address }}).', verbose_name='Шаблон тела запроса')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('triggers', models.ManyToManyField(help_text='Выберите события, которые будут вызывать этот вебхук.', to='auditing.event', verbose_name='События-триггеры')),
            ],
            options={
                'verbose_name': 'Вебхук',
                'verbose_name_plural': 'Вебхуки',
            },
        ),
    ]
