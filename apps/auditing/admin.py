# File: apps/auditing/admin.py
from typing import Any, Optional

from django.contrib import admin
from django.http import HttpRequest
from django.utils.safestring import mark_safe
from unfold.admin import ModelAdmin

from .models import Event, LogEntry, Webhook


@admin.register(Event)
class EventAdmin(ModelAdmin):
    """Admin interface for the Event model."""
    list_display = ("name", "identifier")
    search_fields = ("name", "identifier")

    def has_add_permission(self, request: HttpRequest) -> bool:
        """
        Prevent adding new Event objects from the admin interface.

        Events should be defined in code (events.py) and synchronized,
        not created manually.

        Args:
            request: The current HTTP request.

        Returns:
            False to disable the 'Add' functionality.
        """
        return False

    def has_change_permission(self, request: HttpRequest, obj: Optional[Event] = None) -> bool:
        """
        Prevent changing Event objects from the admin interface.

        Args:
            request: The current HTTP request.
            obj: The Event object being considered.

        Returns:
            False to disable the 'Change' functionality.
        """
        return False

    def has_delete_permission(self, request: HttpRequest, obj: Optional[Event] = None) -> bool:
        """
        Prevent deleting Event objects from the admin interface.

        Args:
            request: The current HTTP request.
            obj: The Event object being considered.

        Returns:
            False to disable the 'Delete' functionality.
        """
        return False


@admin.register(Webhook)
class WebhookAdmin(ModelAdmin):
    """Admin interface for the Webhook model."""
    list_display = ("name", "url", "http_method", "is_active", "created_at")
    list_filter = ("is_active", "http_method", "triggers")
    search_fields = ("name", "url")
    filter_horizontal = ("triggers",)

    fieldsets = (
        (None, {"fields": ("name", "is_active", "triggers")}),
        (
            "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞",
            {
                "fields": ("url", "http_method", "headers", "body_template"),
                "description": mark_safe(
                    """
                <div class="p-4 space-y-4 border rounded-md bg-base-50 border-base-200 dark:bg-base-800 dark:border-base-700 text-font-default-light dark:text-font-default-dark">
                    <h4 class="font-semibold text-lg text-font-important-light dark:text-font-important-dark">–°–ø—Ä–∞–≤–∫–∞ –ø–æ —à–∞–±–ª–æ–Ω–∞–º</h4>
                    
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <div>
                            <h5 class="font-medium text-base">–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:</h5>
                            <ul class="list-disc list-inside space-y-1">
                                <li><code>{{ event }}</code> - –û–±—ä–µ–∫—Ç —Å–æ–±—ã—Ç–∏—è (e.g., <code>{{ event.name }}</code>).</li>
                                <li><code>{{ device }}</code> - –û–±—ä–µ–∫—Ç —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ (e.g., <code>{{ device.ip_address }}</code>).</li>
                                <li><code>{{ user }}</code> - –û–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (e.g., <code>{{ user.username }}</code>).</li>
                                <li><code>{{ instance }}</code> - –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –æ–±—ä–µ–∫—Ç, –≤—ã–∑–≤–∞–≤—à–∏–π —Å–æ–±—ã—Ç–∏–µ.</li>
                                <li><code>{{ details }}</code> - JSON-–æ–±—ä–µ–∫—Ç —Å –¥–æ–ø. –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π.</li>
                                <li><code>{{ timestamp }}</code> - –ú–µ—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ —Å–æ–±—ã—Ç–∏—è (–æ–±—ä–µ–∫—Ç datetime).</li>
                                <li><code>{{ events }}</code> - <strong>(–î–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã—Ö)</strong> –°–ø–∏—Å–æ–∫ —Å–æ–±—ã—Ç–∏–π.</li>
                            </ul>
                        </div>
                        <div>
                            <h5 class="font-medium text-base">–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã:</h5>
                            <ul class="list-disc list-inside space-y-1">
                                <li><code>|json_dump</code> - –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –æ–±—ä–µ–∫—Ç –≤ –∫–æ–º–ø–∞–∫—Ç–Ω—ã–π JSON.</li>
                                <li><code>|escapejs</code> - –≠–∫—Ä–∞–Ω–∏—Ä—É–µ—Ç —Å–∏–º–≤–æ–ª—ã –¥–ª—è –≤—Å—Ç—Ä–∞–∏–≤–∞–Ω–∏—è –≤ JSON/JS.</li>
                                <li><code>|date:"d.m.Y H:i"</code> - –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–∞—Ç—É.</li>
                                <li><code>|default:"N/A"</code> - –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.</li>
                            </ul>
                        </div>
                    </div>

                    <h5 class="font-medium text-base mt-4">–ü—Ä–∏–º–µ—Ä—ã —à–∞–±–ª–æ–Ω–æ–≤</h5>

                    <details class="p-2 bg-base-100 rounded dark:bg-base-700" open>
                        <summary class="cursor-pointer font-semibold">–ü—Ä–∏–º–µ—Ä: Telegram (–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π —Å–ø–æ—Å–æ–±)</summary>
                        <div class="mt-2 pt-2 border-t border-base-200 dark:border-base-700">
                            <p class="text-sm"><strong>–í–∞–∂–Ω–æ–µ –ø—Ä–∞–≤–∏–ª–æ:</strong> –®–∞–±–ª–æ–Ω —Ç–µ–ª–∞ –¥–æ–ª–∂–µ–Ω –≤—Å–µ–≥–¥–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å <strong>–≤–∞–ª–∏–¥–Ω—ã–π –æ–¥–Ω–æ—Å—Ç—Ä–æ—á–Ω—ã–π JSON-–æ–±—ä–µ–∫—Ç</strong>. –ü–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫ –≤–Ω—É—Ç—Ä–∏ —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É–∫–∞–∑–∞–Ω—ã –∫–∞–∫ <code>\\n</code>.</p>
                            <p class="text-sm"><strong>–ú–µ—Ç–æ–¥:</strong> <code>POST</code>. <strong>–†–µ–∂–∏–º –ø–∞—Ä—Å–∏–Ω–≥–∞:</strong> <code>HTML</code>.</p>
                            <pre style="white-space: pre-wrap; word-break: break-all;"><code class="block text-sm">
{"chat_id": "YOUR_CHAT_ID", "parse_mode": "HTML", "disable_web_page_preview": true, "text": "üö® &lt;b&gt;–ù–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ&lt;/b&gt;\\n\\n–¢–∏–ø: &lt;code&gt;{{ event.name }}&lt;/code&gt;\\n–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ: &lt;code&gt;{{ device.ip_address | default:\"N/A\" }}&lt;/code&gt;\\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: &lt;code&gt;{{ user.username | default:\"N/A\" }}&lt;/code&gt;\\n–í—Ä–µ–º—è: &lt;code&gt;{{ timestamp | date:\"d.m.Y H:i:s\" }}&lt;/code&gt;{% if details %}\\n\\n&lt;b&gt;–î–æ–ø. –∏–Ω—Ñ–æ:&lt;/b&gt;\\n&lt;code&gt;{{ details | json_dump | escapejs }}&lt;/code&gt;{% endif %}"}
                            </code></pre>
                        </div>
                    </details>
                    
                    <details class="p-2 bg-base-100 rounded dark:bg-base-700 mt-2">
                        <summary class="cursor-pointer font-semibold">–ü—Ä–∏–º–µ—Ä: Discord/Slack</summary>
                        <div class="mt-2 pt-2 border-t border-base-200 dark:border-base-700">
                           <p class="text-sm">–®–∞–±–ª–æ–Ω —Ç–∞–∫–∂–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–∞–ª–∏–¥–Ω—ã–º –æ–¥–Ω–æ—Å—Ç—Ä–æ—á–Ω—ã–º JSON.</p>
                            <pre style="white-space: pre-wrap; word-break: break-all;"><code class="block text-sm">
{"username": "Sensor Monitor", "content": "–°–æ–±—ã—Ç–∏–µ: **{{ event.name }}**", "embeds": [{"title": "–î–µ—Ç–∞–ª–∏ —Å–æ–±—ã—Ç–∏—è", "fields": [{"name": "–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ", "value": "{{ device.ip_address | default:'N/A' }}", "inline": true}, {"name": "–í—Ä–µ–º—è", "value": "{{ timestamp | date:'d.m.Y H:i:s' }}", "inline": true}]}]}
                            </code></pre>
                        </div>
                    </details>

                    <details class="p-2 bg-base-100 rounded dark:bg-base-700 mt-2">
                        <summary class="cursor-pointer font-semibold">–ü—Ä–∏–º–µ—Ä: –†–µ–ø–æ—Ä—Ç –Ω–∞ AbuseIPDB (–¥–ª—è —Å–æ–±—ã—Ç–∏—è DOS_DETECTED)</summary>
                        <div class="mt-2 pt-2 border-t border-base-200 dark:border-base-700">
                            <p><strong>URL:</strong> <code>https://api.abuseipdb.com/api/v2/report</code></p>
                            <p><strong>–ú–µ—Ç–æ–¥:</strong> <code>POST</code></p>
                            <p><strong>–ó–∞–≥–æ–ª–æ–≤–∫–∏:</strong> <code>{"Key": "–í–ê–®_API_–ö–õ–Æ–ß", "Accept": "application/json", "Content-Type": "application/x-www-form-urlencoded"}</code></p>
                            <p class="text-sm"><strong>–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:</strong> –≠—Ç–æ—Ç –ø—Ä–∏–º–µ—Ä –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç JSON, –ø–æ—ç—Ç–æ–º—É –Ω–æ–≤–∞—è –ª–æ–≥–∏–∫–∞ –Ω–∞ –Ω–µ–≥–æ –Ω–µ –ø–æ–≤–ª–∏—è–µ—Ç.</p>
                            <pre style="white-space: pre-wrap; word-break: break-all;"><code class="block text-sm">ip={{ details.ip_address }}&categories=18,21&comment=Automated report: Throttling detected for sensor data endpoint. User-Agent: {{ details.user_agent }}.</code></pre>
                        </div>
                    </details>
                    
                    <div class="mt-4 pt-4 border-t border-base-200 dark:border-base-700">
                        <h5 class="font-medium text-base"><strong>‚ö†Ô∏è –£—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –Ω–µ–ø–æ–ª–∞–¥–æ–∫</strong></h5>
                        <p class="text-sm">–ï—Å–ª–∏ –≤–µ–±—Ö—É–∫–∏ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è, –≤ –ø–µ—Ä–≤—É—é –æ—á–µ—Ä–µ–¥—å –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ Docker-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞. –û—à–∏–±–∫–∞ <code>failed to parse rendered template</code> –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –≤–∞—à —à–∞–±–ª–æ–Ω –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –≤–∞–ª–∏–¥–Ω—ã–º JSON-–æ–±—ä–µ–∫—Ç–æ–º.</p>
                    </div>
                </div>
            """
                ),
            },
        ),
        (
            "–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —á–∞—Å—Ç–æ—Ç—ã –æ—Ç–ø—Ä–∞–≤–∫–∏",
            {
                "fields": (
                    "rate_limit_seconds",
                    "rate_limit_action",
                    "coalesce_text_limit",
                ),
                "description": "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Å–ø–∞–º–∞ –Ω–∞ —ç–Ω–¥–ø–æ–∏–Ω—Ç –≤–µ–±—Ö—É–∫–∞.",
            },
        ),
    )


@admin.register(LogEntry)
class LogEntryAdmin(ModelAdmin):
    """Admin interface for the LogEntry model (read-only)."""
    list_display = ("timestamp", "event", "user", "device")
    list_filter = ("event", "timestamp", "user", "device")
    search_fields = ("details", "user__username", "device__ip_address")
    readonly_fields = [f.name for f in LogEntry._meta.fields]

    def has_add_permission(self, request: HttpRequest) -> bool:
        """
        Prevent adding log entries from the admin interface.

        Logs are created programmatically by the system in response to events.

        Args:
            request: The current HTTP request.

        Returns:
            False to disable the 'Add' functionality.
        """
        return False

    def has_change_permission(self, request: HttpRequest, obj: Optional[LogEntry] = None) -> bool:
        """
        Prevent changing log entries from the admin interface.

        Args:
            request: The current HTTP request.
            obj: The LogEntry object being considered.

        Returns:
            False to make the log entries read-only.
        """
        return False

    def has_delete_permission(self, request: HttpRequest, obj: Optional[LogEntry] = None) -> bool:
        """
        Prevent deleting individual log entries from the admin interface.

        Deletion should happen via automated pruning tasks.

        Args:
            request: The current HTTP request.
            obj: The LogEntry object being considered.

        Returns:
            False to disable the 'Delete' functionality.
        """
        return False
